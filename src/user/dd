 
 fortran heavy(spice) IO test begin
 data load success
 data unload success
 fortran heavy(spice) IO test end
 
Dakota version 6.7 released Nov 15 2017.
Repository revision 0616ac7 (2017-11-10) built Jan  4 2018 06:17:51.
Running serial Dakota executable in serial mode.
Start time: Thu Jan  4 06:22:57 2018

---------------------------
Begin DAKOTA input file
dakota_rosenbrock_python.in
---------------------------
# DAKOTA/Python linked interface demonstration
#  * Requires DAKOTA compiled with and linked against Python
#  * Exercise the Python interface using list or numpy
#  * If DAKOTA found numpy it will be used; there's no user toggle for
#    this currently

method,						
	optpp_newton
	  max_iterations = 100			
	  convergence_tolerance = 1e-8

variables,					
	continuous_design = 2			
	  cdv_initial_point  -1.2  1.0		
	  cdv_lower_bounds   -2.0 -2.0		
	  cdv_upper_bounds    2.0  2.0		
	  cdv_descriptor      'x1' 'x2'

interface,							
	python
# the current analysis driver format is module:function	
# use this for the list method of passing the data		
   analysis_drivers = 'rosenbrock:rosenbrock_list'	#0,#2
# use this for the numpy array method of passing the data	
#	  analysis_drivers = 'rosenbrock:rosenbrock_numpy' 	#1,#3
#           numpy						#1,#3
#	  analysis_components = 'optarg1'

responses,				
	num_objective_functions = 1	
	analytic_gradients		
	analytic_hessians
---------------------
End DAKOTA input file
---------------------

Using Dakota input file 'dakota_rosenbrock_python.in'
Writing new restart file 'dakota.rst'.
Python interpreter initialized for direct function evaluation.

>>>>> Executing environment.

>>>>> Running optpp_newton iterator.

---------------------
Begin Evaluation    1
---------------------
Parameters for evaluation 1:
                     -1.2000000000e+00 x1
                      1.0000000000e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
------------||||||----------
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 1:
Active set vector = { 7 } Deriv vars vector = { 1 2 }
                      2.4200000000e+01 obj_fn
 [ -2.1560000000e+02 -8.8000000000e+01 ] obj_fn gradient
[[  1.3300000000e+03  4.8000000000e+02 
    4.8000000000e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation    2
---------------------
Parameters for evaluation 2:
                     -1.1752807009e+00 x1
                      1.3806736068e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 2:
Active set vector = { 1 }
                      4.7318834745e+00 obj_fn



---------------------
Begin Evaluation    3
---------------------
Parameters for evaluation 3:
                     -1.1752807009e+00 x1
                      1.3806736068e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 3:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -4.6378560379e+00 -1.2222383803e-01 ] obj_fn gradient



---------------------
Begin Evaluation    4
---------------------
Parameters for evaluation 4:
                     -1.1752807009e+00 x1
                      1.3806736068e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 4:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  1.1072722285e+03  4.7011228037e+02 
    4.7011228037e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation    5
---------------------
Parameters for evaluation 5:
                      2.6315341456e-01 x1
                     -2.0000000000e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 5:
Active set vector = { 1 }
                      4.2872238309e+02 obj_fn



---------------------
Begin Evaluation    6
---------------------
Parameters for evaluation 6:
                     -1.0314372894e+00 x1
                      1.0426062461e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 6:
Active set vector = { 1 }
                      4.1719219173e+00 obj_fn



---------------------
Begin Evaluation    7
---------------------
Parameters for evaluation 7:
                     -1.0314372894e+00 x1
                      1.0426062461e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 7:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -1.2832829309e+01 -4.2513271630e+00 ] obj_fn gradient



---------------------
Begin Evaluation    8
---------------------
Parameters for evaluation 8:
                     -1.0314372894e+00 x1
                      1.0426062461e+00 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 8:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  8.6159295988e+02  4.1257491575e+02 
    4.1257491575e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation    9
---------------------
Parameters for evaluation 9:
                     -6.4459950761e-01 x1
                      2.6586515553e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 9:
Active set vector = { 1 }
                      4.9440213495e+00 obj_fn



---------------------
Begin Evaluation   10
---------------------
Parameters for evaluation 10:
                     -8.9937003948e-01 x1
                      7.7742516878e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 10:
Active set vector = { 1 }
                      3.7064620759e+00 obj_fn



---------------------
Begin Evaluation   11
---------------------
Parameters for evaluation 11:
                     -8.9937003948e-01 x1
                      7.7742516878e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 11:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -1.5109685053e+01 -6.2882598252e+00 ] obj_fn gradient



---------------------
Begin Evaluation   12
---------------------
Parameters for evaluation 12:
                     -8.9937003948e-01 x1
                      7.7742516878e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 12:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  6.6166969398e+02  3.5974801579e+02 
    3.5974801579e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   13
---------------------
Parameters for evaluation 13:
                     -6.3876466045e-01 x1
                      3.4010517099e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 13:
Active set vector = { 1 }
                      3.1467959710e+00 obj_fn



---------------------
Begin Evaluation   14
---------------------
Parameters for evaluation 14:
                     -6.3876466045e-01 x1
                      3.4010517099e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 14:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -2.0630240864e+01 -1.3583024091e+01 ] obj_fn gradient



---------------------
Begin Evaluation   15
---------------------
Parameters for evaluation 15:
                     -6.3876466045e-01 x1
                      3.4010517099e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 15:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  3.5558228134e+02  2.5550586418e+02 
    2.5550586418e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   16
---------------------
Parameters for evaluation 16:
                     -5.2638991961e-01 x1
                      2.6445826910e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 16:
Active set vector = { 1 }
                      2.3458130230e+00 obj_fn



---------------------
Begin Evaluation   17
---------------------
Parameters for evaluation 17:
                     -5.2638991961e-01 x1
                      2.6445826910e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 17:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -5.7116971027e+00 -2.5256156742e+00 ] obj_fn gradient



---------------------
Begin Evaluation   18
---------------------
Parameters for evaluation 18:
                     -5.2638991961e-01 x1
                      2.6445826910e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 18:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  2.2872030932e+02  2.1055596784e+02 
    2.1055596784e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   19
---------------------
Parameters for evaluation 19:
                     -9.3447989751e-02 x1
                     -1.7870617274e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 19:
Active set vector = { 1 }
                      4.7089551144e+00 obj_fn



---------------------
Begin Evaluation   20
---------------------
Parameters for evaluation 20:
                     -4.4755448351e-01 x1
                      1.8376139124e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 20:
Active set vector = { 1 }
                      2.1227831338e+00 obj_fn



---------------------
Begin Evaluation   21
---------------------
Parameters for evaluation 21:
                     -4.4755448351e-01 x1
                      1.8376139124e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 21:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -5.8567782904e+00 -3.3087248955e+00 ] obj_fn gradient



---------------------
Begin Evaluation   22
---------------------
Parameters for evaluation 22:
                     -4.4755448351e-01 x1
                      1.8376139124e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 22:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  1.6886146236e+02  1.7902179341e+02 
    1.7902179341e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   23
---------------------
Parameters for evaluation 23:
                     -1.1159599015e-01 x1
                     -1.0041443577e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 23:
Active set vector = { 1 }
                      2.5095664630e+00 obj_fn



---------------------
Begin Evaluation   24
---------------------
Parameters for evaluation 24:
                     -3.2551887778e-01 x1
                      8.0535636059e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 24:
Active set vector = { 1 }
                      1.8216530387e+00 obj_fn



---------------------
Begin Evaluation   25
---------------------
Parameters for evaluation 25:
                     -3.2551887778e-01 x1
                      8.0535636059e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 25:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -5.9618126225e+00 -5.0853807459e+00 ] obj_fn gradient



---------------------
Begin Evaluation   26
---------------------
Parameters for evaluation 26:
                     -3.2551887778e-01 x1
                      8.0535636059e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 26:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  9.6940793323e+01  1.3020755111e+02 
    1.3020755111e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   27
---------------------
Parameters for evaluation 27:
                     -1.0769881718e-01 x1
                     -3.5846540107e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 27:
Active set vector = { 1 }
                      1.4521049314e+00 obj_fn



---------------------
Begin Evaluation   28
---------------------
Parameters for evaluation 28:
                     -1.0769881718e-01 x1
                     -3.5846540107e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 28:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -4.2593305717e+00 -9.4891150658e+00 ] obj_fn gradient



---------------------
Begin Evaluation   29
---------------------
Parameters for evaluation 29:
                     -1.0769881718e-01 x1
                     -3.5846540107e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 29:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  3.0257458310e+01  4.3079526873e+01 
    4.3079526873e+01  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   30
---------------------
Parameters for evaluation 30:
                     -2.0942441210e-03 x1
                     -1.1147940729e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 30:
Active set vector = { 1 }
                      1.0166303129e+00 obj_fn



---------------------
Begin Evaluation   31
---------------------
Parameters for evaluation 31:
                     -2.0942441210e-03 x1
                     -1.1147940729e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 31:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -2.0135307660e+00 -2.2304653175e+00 ] obj_fn gradient



---------------------
Begin Evaluation   32
---------------------
Parameters for evaluation 32:
                     -2.0942441210e-03 x1
                     -1.1147940729e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 32:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  6.4644393217e+00  8.3769764841e-01 
    8.3769764841e-01  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   33
---------------------
Parameters for evaluation 33:
                      3.0810667782e-01 x1
                     -1.2948873494e-03 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 33:
Active set vector = { 1 }
                      1.4046339698e+00 obj_fn



---------------------
Begin Evaluation   34
---------------------
Parameters for evaluation 34:
                      9.4838103835e-02 x1
                     -8.0690343458e-03 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 34:
Active set vector = { 1 }
                      8.4843367993e-01 obj_fn



---------------------
Begin Evaluation   35
---------------------
Parameters for evaluation 35:
                      9.4838103835e-02 x1
                     -8.0690343458e-03 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 35:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -1.1630233747e+00 -3.4126600570e+00 ] obj_fn gradient



---------------------
Begin Evaluation   36
---------------------
Parameters for evaluation 36:
                      9.4838103835e-02 x1
                     -8.0690343458e-03 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 36:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  1.6020732865e+01 -3.7935241534e+01 
   -3.7935241534e+01  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   37
---------------------
Parameters for evaluation 37:
                      2.9996635788e-01 x1
                      4.7902213585e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 37:
Active set vector = { 1 }
                      6.6709956143e-01 obj_fn



---------------------
Begin Evaluation   38
---------------------
Parameters for evaluation 38:
                      2.9996635788e-01 x1
                      4.7902213585e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 38:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  3.6486787571e+00 -8.4155204554e+00 ] obj_fn gradient



---------------------
Begin Evaluation   39
---------------------
Parameters for evaluation 39:
                      2.9996635788e-01 x1
                      4.7902213585e-02 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 39:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  9.0814893600e+01 -1.1998654315e+02 
   -1.1998654315e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   40
---------------------
Parameters for evaluation 40:
                      3.7431522355e-01 x1
                      1.3458413017e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 40:
Active set vector = { 1 }
                      3.9453704857e-01 obj_fn



---------------------
Begin Evaluation   41
---------------------
Parameters for evaluation 41:
                      3.7431522355e-01 x1
                      1.3458413017e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 41:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -4.2372020236e-01 -1.1055512820e+00 ] obj_fn gradient



---------------------
Begin Evaluation   42
---------------------
Parameters for evaluation 42:
                      3.7431522355e-01 x1
                      1.3458413017e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 42:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  1.1630061183e+02 -1.4972608942e+02 
   -1.4972608942e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   43
---------------------
Parameters for evaluation 43:
                      6.7147416123e-01 x1
                      3.6257410817e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 43:
Active set vector = { 1 }
                      8.8767899662e-01 obj_fn



---------------------
Begin Evaluation   44
---------------------
Parameters for evaluation 44:
                      4.3878261796e-01 x1
                      1.8404560674e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 44:
Active set vector = { 1 }
                      3.2216375813e-01 obj_fn



---------------------
Begin Evaluation   45
---------------------
Parameters for evaluation 45:
                      4.3878261796e-01 x1
                      1.8404560674e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 45:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  3.6671956528e-01 -1.6969158171e+00 ] obj_fn gradient



---------------------
Begin Evaluation   46
---------------------
Parameters for evaluation 46:
                      4.3878261796e-01 x1
                      1.8404560674e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 46:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  1.5941798029e+02 -1.7551304718e+02 
   -1.7551304718e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   47
---------------------
Parameters for evaluation 47:
                      6.4687819829e-01 x1
                      3.7514762718e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 47:
Active set vector = { 1 }
                      3.1221671059e-01 obj_fn



---------------------
Begin Evaluation   48
---------------------
Parameters for evaluation 48:
                      6.4687819829e-01 x1
                      3.7514762718e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 48:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  1.0498663901e+01 -8.6607552499e+00 ] obj_fn gradient



---------------------
Begin Evaluation   49
---------------------
Parameters for evaluation 49:
                      6.4687819829e-01 x1
                      3.7514762718e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 49:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  3.5408263324e+02 -2.5875127932e+02 
   -2.5875127932e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   50
---------------------
Parameters for evaluation 50:
                      6.8343030849e-01 x1
                      4.6574092502e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 50:
Active set vector = { 1 }
                      1.0039487563e-01 obj_fn



---------------------
Begin Evaluation   51
---------------------
Parameters for evaluation 51:
                      6.8343030849e-01 x1
                      4.6574092502e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 51:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [ -2.6789740299e-01 -2.6721230789e-01 ] obj_fn gradient



---------------------
Begin Evaluation   52
---------------------
Parameters for evaluation 52:
                      6.8343030849e-01 x1
                      4.6574092502e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 52:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  3.7619601386e+02 -2.7337212340e+02 
   -2.7337212340e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   53
---------------------
Parameters for evaluation 53:
                      9.3324295831e-01 x1
                      8.0853604001e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 53:
Active set vector = { 1 }
                      3.9391211947e-01 obj_fn



---------------------
Begin Evaluation   54
---------------------
Parameters for evaluation 54:
                      7.2723292250e-01 x1
                      5.2584725717e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 54:
Active set vector = { 1 }
                      7.5314200292e-02 obj_fn



---------------------
Begin Evaluation   55
---------------------
Parameters for evaluation 55:
                      7.2723292250e-01 x1
                      5.2584725717e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 55:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  3.3309888532e-01 -6.0409327820e-01 ] obj_fn gradient



---------------------
Begin Evaluation   56
---------------------
Parameters for evaluation 56:
                      7.2723292250e-01 x1
                      5.2584725717e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 56:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  4.2630236541e+02 -2.9089316900e+02 
   -2.9089316900e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   57
---------------------
Parameters for evaluation 57:
                      8.9727520622e-01 x1
                      7.7618840155e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 57:
Active set vector = { 1 }
                      9.4156602210e-02 obj_fn



---------------------
Begin Evaluation   58
---------------------
Parameters for evaluation 58:
                      7.9813090749e-01 x1
                      6.3022531131e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 58:
Active set vector = { 1 }
                      4.5358328285e-02 obj_fn



---------------------
Begin Evaluation   59
---------------------
Parameters for evaluation 59:
                      7.9813090749e-01 x1
                      6.3022531131e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 59:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  1.7632300655e+00 -1.3575268356e+00 ] obj_fn gradient



---------------------
Begin Evaluation   60
---------------------
Parameters for evaluation 60:
                      7.9813090749e-01 x1
                      6.3022531131e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 60:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  5.1432541006e+02 -3.1925236300e+02 
   -3.1925236300e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   61
---------------------
Parameters for evaluation 61:
                      8.8375736910e-01 x1
                      7.7369518551e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 61:
Active set vector = { 1 }
                      1.8888027820e-02 obj_fn



---------------------
Begin Evaluation   62
---------------------
Parameters for evaluation 62:
                      8.8375736910e-01 x1
                      7.7369518551e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 62:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  2.3593636798e+00 -1.4663803846e+00 ] obj_fn gradient



---------------------
Begin Evaluation   63
---------------------
Parameters for evaluation 63:
                      8.8375736910e-01 x1
                      7.7369518551e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 63:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  6.2975443072e+02 -3.5350294764e+02 
   -3.5350294764e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   64
---------------------
Parameters for evaluation 64:
                      9.3088744118e-01 x1
                      8.6433017595e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 64:
Active set vector = { 1 }
                      5.2699419201e-03 obj_fn



---------------------
Begin Evaluation   65
---------------------
Parameters for evaluation 65:
                      9.3088744118e-01 x1
                      8.6433017595e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 65:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  6.8886919300e-01 -4.4425043998e-01 ] obj_fn gradient



---------------------
Begin Evaluation   66
---------------------
Parameters for evaluation 66:
                      9.3088744118e-01 x1
                      8.6433017595e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 66:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  6.9612964340e+02 -3.7235497647e+02 
   -3.7235497647e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   67
---------------------
Parameters for evaluation 67:
                      9.7873945984e-01 x1
                      9.5564110509e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 67:
Active set vector = { 1 }
                      9.7634049494e-04 obj_fn



---------------------
Begin Evaluation   68
---------------------
Parameters for evaluation 68:
                      9.7873945984e-01 x1
                      9.5564110509e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 68:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  8.5393581646e-01 -4.5796503235e-01 ] obj_fn gradient



---------------------
Begin Evaluation   69
---------------------
Parameters for evaluation 69:
                      9.7873945984e-01 x1
                      9.5564110509e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 69:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  7.6926067427e+02 -3.9149578394e+02 
   -3.9149578394e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   70
---------------------
Parameters for evaluation 70:
                      9.9332120953e-01 x1
                      9.8647439435e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 70:
Active set vector = { 1 }
                      4.9127434538e-05 obj_fn



---------------------
Begin Evaluation   71
---------------------
Parameters for evaluation 71:
                      9.9332120953e-01 x1
                      9.8647439435e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 71:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  7.1126755404e-02 -4.2526191692e-02 ] obj_fn gradient



---------------------
Begin Evaluation   72
---------------------
Parameters for evaluation 72:
                      9.9332120953e-01 x1
                      9.8647439435e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 72:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  7.9143467263e+02 -3.9732848381e+02 
   -3.9732848381e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   73
---------------------
Parameters for evaluation 73:
                      9.9972719897e-01 x1
                      9.9941343413e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 73:
Active set vector = { 1 }
                      2.4283400701e-07 obj_fn



---------------------
Begin Evaluation   74
---------------------
Parameters for evaluation 74:
                      9.9972719897e-01 x1
                      9.9941343413e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 74:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  1.5865210455e-02 -8.2076453138e-03 ] obj_fn gradient



---------------------
Begin Evaluation   75
---------------------
Parameters for evaluation 75:
                      9.9972719897e-01 x1
                      9.9941343413e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 75:
Active set vector = { 4 } Deriv vars vector = { 1 2 }
[[  8.0157999318e+02 -3.9989087959e+02 
   -3.9989087959e+02  2.0000000000e+02 ]] obj_fn Hessian



---------------------
Begin Evaluation   76
---------------------
Parameters for evaluation 76:
                      9.9999776218e-01 x1
                      9.9999545109e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 76:
Active set vector = { 1 }
                      5.5447395888e-12 obj_fn



---------------------
Begin Evaluation   77
---------------------
Parameters for evaluation 77:
                      9.9999776218e-01 x1
                      9.9999545109e-01 x2

Python interface: invoking rosenbrock:rosenbrock_list 
 getstate test
[-283441.66136335 -281095.42150025 -278726.46846107 -276335.01019408
 -273921.25583385 -271485.41568982 -269027.70123491 -266548.32509428
 -264047.50103402]

Active response data for evaluation 77:
Active set vector = { 2 } Deriv vars vector = { 1 2 }
 [  2.4833885738e-05 -1.4654794267e-05 ] obj_fn gradient


********************************************************
             OPT++ TERMINATION CRITERION                
	  SUCCESS - optpp_newton converged to a solution
Algorithm converged - Norm of gradient is less than gradient tolerance
********************************************************
<<<<< Function evaluation summary: 77 total (77 new, 0 duplicate)
<<<<< Best parameters          =
                      9.9999776218e-01 x1
                      9.9999545109e-01 x2
<<<<< Best objective function  =
                      5.5447395888e-12
<<<<< Best data captured at function evaluation 76


<<<<< Iterator optpp_newton completed.
<<<<< Environment execution completed.
Python interpreter terminated.
DAKOTA execution time in seconds:
  Total CPU        =   0.156598 [parent =      0.156, child =   0.000598]
  Total wall clock =    0.15672
