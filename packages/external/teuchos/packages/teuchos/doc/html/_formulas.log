This is pdfTeX, Version 3.14159265-2.6-1.40.16 (TeX Live 2015/Debian) (preloaded format=latex 2017.12.21)  27 DEC 2017 00:19
entering extended mode
 restricted \write18 enabled.
 %&-line parsing enabled.
**_formulas.tex
(./_formulas.tex
LaTeX2e <2016/02/01>
Babel <3.9q> and hyphenation patterns for 12 language(s) loaded.

(/usr/share/texlive/texmf-dist/tex/latex/base/article.cls
Document Class: article 2014/09/29 v1.4h Standard LaTeX document class
(/usr/share/texlive/texmf-dist/tex/latex/base/size10.clo
File: size10.clo 2014/09/29 v1.4h Standard LaTeX file (size option)
)
\c@part=\count79
\c@section=\count80
\c@subsection=\count81
\c@subsubsection=\count82
\c@paragraph=\count83
\c@subparagraph=\count84
\c@figure=\count85
\c@table=\count86
\abovecaptionskip=\skip41
\belowcaptionskip=\skip42
\bibindent=\dimen102
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/epsfig.sty
Package: epsfig 1999/02/16 v1.7a (e)psfig emulation (SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/graphicx.sty
Package: graphicx 2014/10/28 v1.0g Enhanced LaTeX Graphics (DPC,SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/keyval.sty
Package: keyval 2014/10/28 v1.15 key=value parser (DPC)
\KV@toks@=\toks14
) (/usr/share/texlive/texmf-dist/tex/latex/graphics/graphics.sty
Package: graphics 2016/01/03 v1.0q Standard LaTeX Graphics (DPC,SPQR)
(/usr/share/texlive/texmf-dist/tex/latex/graphics/trig.sty
Package: trig 2016/01/03 v1.10 sin cos tan (DPC)
) (/usr/share/texlive/texmf-dist/tex/latex/latexconfig/graphics.cfg
File: graphics.cfg 2010/04/23 v1.9 graphics configuration of TeX Live
)
Package graphics Info: Driver file: dvips.def on input line 95.
(/usr/share/texlive/texmf-dist/tex/latex/graphics/dvips.def
File: dvips.def 2015/12/30 v3.0k Driver-dependent file (DPC,SPQR)
))
\Gin@req@height=\dimen103
\Gin@req@width=\dimen104
)
\epsfxsize=\dimen105
\epsfysize=\dimen106
)
No file _formulas.aux.
\openout1 = `_formulas.aux'.

LaTeX Font Info:    Checking defaults for OML/cmm/m/it on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for T1/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OT1/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OMS/cmsy/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for OMX/cmex/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    Checking defaults for U/cmr/m/n on input line 5.
LaTeX Font Info:    ... okay on input line 5.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <7> on input line 6.
LaTeX Font Info:    External font `cmex10' loaded for size
(Font)              <5> on input line 6.
[1

] [2] [3] [4] [5] [6] [7]
! Misplaced alignment tab character &.
l.27 \[ k = \begin{cases} i &
                              \text{if $u > v$}, \\ \min(i,j) & \text{if $u ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.27 \[ k = \begin{cases} i & \text
                                   {if $u > v$}, \\ \min(i,j) & \text{if $u ...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.27 \[ k = \begin{cases} i & \text{if $
                                        u > v$}, \\ \min(i,j) & \text{if $u ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.27 \[ k = \begin{cases} i & \text{if $
                                        u > v$}, \\ \min(i,j) & \text{if $u ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   u
l.27 \[ k = \begin{cases} i & \text{if $u
                                          > v$}, \\ \min(i,j) & \text{if $u ...
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten $.
<recently read> }
                 
l.27 \[ k = \begin{cases} i & \text{if $u > v$}
                                               , \\ \min(i,j) & \text{if $u ...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.27 ...ses} i & \text{if $u > v$}, \\ \min(i,j) &
                                                   \text{if $u = v$}, \\ j &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.27 ... & \text{if $u > v$}, \\ \min(i,j) & \text
                                                  {if $u = v$}, \\ j & \text...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.27 ...ext{if $u > v$}, \\ \min(i,j) & \text{if $
                                                  u = v$}, \\ j & \text{if $...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.27 ...$u > v$}, \\ \min(i,j) & \text{if $u = v$}
                                                  , \\ j & \text{if $u < v$}...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.27 ..., \\ \min(i,j) & \text{if $u = v$}, \\ j &
                                                   \text{if $u < v$}. \\ \en...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.27 ...min(i,j) & \text{if $u = v$}, \\ j & \text
                                                  {if $u < v$}. \\ \end{case...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.27 ...,j) & \text{if $u = v$}, \\ j & \text{if $
                                                  u < v$}. \\ \end{cases} \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.27 ...text{if $u = v$}, \\ j & \text{if $u < v$}
                                                  . \\ \end{cases} \]
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


! LaTeX Error: \begin{document} ended by \end{cases}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.27 ..., \\ j & \text{if $u < v$}. \\ \end{cases}
                                                   \]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.27 ..., \\ j & \text{if $u < v$}. \\ \end{cases}
                                                   \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.27 ..., \\ j & \text{if $u < v$}. \\ \end{cases}
                                                   \]
Things are pretty mixed up, but I think the worst is over.


! LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.27 ...\ j & \text{if $u < v$}. \\ \end{cases} \]
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[8]
! Misplaced alignment tab character &.
l.30 \[ w = \begin{cases} u &
                              \text{if $u > v$}, \\ v & \text{if $u < v$}. \...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.30 \[ w = \begin{cases} u & \text
                                   {if $u > v$}, \\ v & \text{if $u < v$}. \...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.30 \[ w = \begin{cases} u & \text{if $
                                        u > v$}, \\ v & \text{if $u < v$}. \...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.30 \[ w = \begin{cases} u & \text{if $
                                        u > v$}, \\ v & \text{if $u < v$}. \...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   u
l.30 \[ w = \begin{cases} u & \text{if $u
                                          > v$}, \\ v & \text{if $u < v$}. \...
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten $.
<recently read> }
                 
l.30 \[ w = \begin{cases} u & \text{if $u > v$}
                                               , \\ v & \text{if $u < v$}. \...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.30 ...begin{cases} u & \text{if $u > v$}, \\ v &
                                                   \text{if $u < v$}. \\ u &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.30 ...cases} u & \text{if $u > v$}, \\ v & \text
                                                  {if $u < v$}. \\ u & \text...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.30 ...} u & \text{if $u > v$}, \\ v & \text{if $
                                                  u < v$}. \\ u & \text{othe...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.30 ...text{if $u > v$}, \\ v & \text{if $u < v$}
                                                  . \\ u & \text{otherwise}....
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.30 ...$u > v$}, \\ v & \text{if $u < v$}. \\ u &
                                                   \text{otherwise}. \\ \end...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.30 ...$}, \\ v & \text{if $u < v$}. \\ u & \text
                                                  {otherwise}. \\ \end{cases...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: \begin{document} ended by \end{cases}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.30 ...}. \\ u & \text{otherwise}. \\ \end{cases}
                                                   \]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.30 ...}. \\ u & \text{otherwise}. \\ \end{cases}
                                                   \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.30 ...}. \\ u & \text{otherwise}. \\ \end{cases}
                                                   \]
Things are pretty mixed up, but I think the worst is over.


! LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.30 ...\\ u & \text{otherwise}. \\ \end{cases} \]
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[9]
! Misplaced alignment tab character &.
l.33 \[ k = \begin{cases} i &
                              \text{if $u > v$}, \\ j & \text{if $u < v$}. \...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.33 \[ k = \begin{cases} i & \text
                                   {if $u > v$}, \\ j & \text{if $u < v$}. \...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.33 \[ k = \begin{cases} i & \text{if $
                                        u > v$}, \\ j & \text{if $u < v$}. \...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.33 \[ k = \begin{cases} i & \text{if $
                                        u > v$}, \\ j & \text{if $u < v$}. \...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   u
l.33 \[ k = \begin{cases} i & \text{if $u
                                          > v$}, \\ j & \text{if $u < v$}. \...
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten $.
<recently read> }
                 
l.33 \[ k = \begin{cases} i & \text{if $u > v$}
                                               , \\ j & \text{if $u < v$}. \...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.33 ...begin{cases} i & \text{if $u > v$}, \\ j &
                                                   \text{if $u < v$}. \\ \mi...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.33 ...cases} i & \text{if $u > v$}, \\ j & \text
                                                  {if $u < v$}. \\ \min(i,j)...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.33 ...} i & \text{if $u > v$}, \\ j & \text{if $
                                                  u < v$}. \\ \min(i,j) & \t...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.33 ...text{if $u > v$}, \\ j & \text{if $u < v$}
                                                  . \\ \min(i,j) & \text{oth...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.33 ..., \\ j & \text{if $u < v$}. \\ \min(i,j) &
                                                   \text{otherwise}. \\ \end...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.33 ... & \text{if $u < v$}. \\ \min(i,j) & \text
                                                  {otherwise}. \\ \end{cases...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.


! LaTeX Error: \begin{document} ended by \end{cases}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.33 ...in(i,j) & \text{otherwise}. \\ \end{cases}
                                                   \]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.33 ...in(i,j) & \text{otherwise}. \\ \end{cases}
                                                   \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.33 ...in(i,j) & \text{otherwise}. \\ \end{cases}
                                                   \]
Things are pretty mixed up, but I think the worst is over.


! LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.33 ...i,j) & \text{otherwise}. \\ \end{cases} \]
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[10] [11]
! Misplaced alignment tab character &.
l.39 \[ k = \begin{cases} i &
                              \text{if $u < v$}, \\ \min(i,j) & \text{if $u ...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.39 \[ k = \begin{cases} i & \text
                                   {if $u < v$}, \\ \min(i,j) & \text{if $u ...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.39 \[ k = \begin{cases} i & \text{if $
                                        u < v$}, \\ \min(i,j) & \text{if $u ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Missing \endgroup inserted.
<inserted text> 
                \endgroup 
l.39 \[ k = \begin{cases} i & \text{if $
                                        u < v$}, \\ \min(i,j) & \text{if $u ...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Display math should end with $$.
<to be read again> 
                   u
l.39 \[ k = \begin{cases} i & \text{if $u
                                          < v$}, \\ \min(i,j) & \text{if $u ...
The `$' that I just saw supposedly matches a previous `$$'.
So I shall assume that you typed `$$' both times.

! Extra }, or forgotten $.
<recently read> }
                 
l.39 \[ k = \begin{cases} i & \text{if $u < v$}
                                               , \\ \min(i,j) & \text{if $u ...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.39 ...ses} i & \text{if $u < v$}, \\ \min(i,j) &
                                                   \text{if $u = v$}, \\ j &...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.39 ... & \text{if $u < v$}, \\ \min(i,j) & \text
                                                  {if $u = v$}, \\ j & \text...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.39 ...ext{if $u < v$}, \\ \min(i,j) & \text{if $
                                                  u = v$}, \\ j & \text{if $...
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.39 ...$u < v$}, \\ \min(i,j) & \text{if $u = v$}
                                                  , \\ j & \text{if $u > v$}...
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.

! Misplaced alignment tab character &.
l.39 ..., \\ \min(i,j) & \text{if $u = v$}, \\ j &
                                                   \text{if $u > v$}. \\ \en...
I can't figure out why you would want to use a tab mark
here. If you just want an ampersand, the remedy is
simple: Just type `I\&' now. But if some right brace
up above has ended a previous alignment prematurely,
you're probably due for more error messages, and you
might try typing `S' now just to see what is salvageable.

! Undefined control sequence.
l.39 ...min(i,j) & \text{if $u = v$}, \\ j & \text
                                                  {if $u > v$}. \\ \end{case...
The control sequence at the end of the top line
of your error message was never \def'ed. If you have
misspelled it (e.g., `\hobx'), type `I' and the correct
spelling (e.g., `I\hbox'). Otherwise just continue,
and I'll forget about whatever was undefined.

! Missing } inserted.
<inserted text> 
                }
l.39 ...,j) & \text{if $u = v$}, \\ j & \text{if $
                                                  u > v$}. \\ \end{cases} \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra }, or forgotten $.
<recently read> }
                 
l.39 ...text{if $u = v$}, \\ j & \text{if $u > v$}
                                                  . \\ \end{cases} \]
I've deleted a group-closing symbol because it seems to be
spurious, as in `$x}$'. But perhaps the } is legitimate and
you forgot something else, as in `\hbox{$x}'. In such cases
the way to recover is to insert both the forgotten and the
deleted material, e.g., by typing `I$}'.


! LaTeX Error: \begin{document} ended by \end{cases}.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.39 ..., \\ j & \text{if $u > v$}. \\ \end{cases}
                                                   \]
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

! Missing $ inserted.
<inserted text> 
                $
l.39 ..., \\ j & \text{if $u > v$}. \\ \end{cases}
                                                   \]
I've inserted something that you may have forgotten.
(See the <inserted text> above.)
With luck, this will get me unwedged. But if you
really didn't forget anything, try typing `2' now; then
my insertion and my current dilemma will both disappear.

! Extra \endgroup.
<recently read> \endgroup 
                          
l.39 ..., \\ j & \text{if $u > v$}. \\ \end{cases}
                                                   \]
Things are pretty mixed up, but I think the worst is over.


! LaTeX Error: Bad math environment delimiter.

See the LaTeX manual or LaTeX Companion for explanation.
Type  H <return>  for immediate help.
 ...                                              
                                                  
l.39 ...\ j & \text{if $u > v$}. \\ \end{cases} \]
                                                  
Your command was ignored.
Type  I <command> <return>  to replace it with another command,
or  <return>  to continue without it.

[12] [13] [14] [15] [16] [17] [18] [19] (./_formulas.aux) ) 
Here is how much of TeX's memory you used:
 553 strings out of 494498
 6655 string characters out of 6172425
 54784 words of memory out of 5000000
 4037 multiletter control sequences out of 15000+600000
 3640 words of font info for 14 fonts, out of 8000000 for 9000
 264 hyphenation exceptions out of 8191
 32i,6n,21p,218b,100s stack positions out of 5000i,500n,10000p,200000b,80000s

Output written on _formulas.dvi (19 pages, 2712 bytes).
