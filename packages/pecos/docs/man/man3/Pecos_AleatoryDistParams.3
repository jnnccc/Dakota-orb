.TH "AleatoryDistParams" 3 "Wed Dec 27 2017" "Version Version 1.0" "PECOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
AleatoryDistParams \- Container class encapsulating distribution parameters for aleatory random variables\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBAleatoryDistParams\fP ()"
.br
.RI "\fIdefault constructor \fP"
.ti -1c
.RI "\fBAleatoryDistParams\fP (const RealVector &nuv_means, const RealVector &nuv_std_devs, const RealVector &nuv_l_bnds, const RealVector &nuv_u_bnds, const RealVector &lnuv_means, const RealVector &lnuv_std_devs, const RealVector &lnuv_lambdas, const RealVector &lnuv_zetas, const RealVector &lnuv_err_facts, const RealVector &lnuv_l_bnds, const RealVector &lnuv_u_bnds, const RealVector &uuv_l_bnds, const RealVector &uuv_u_bnds, const RealVector &luuv_l_bnds, const RealVector &luuv_u_bnds, const RealVector &tuv_modes, const RealVector &tuv_l_bnds, const RealVector &tuv_u_bnds, const RealVector &euv_betas, const RealVector &beuv_alphas, const RealVector &beuv_betas, const RealVector &beuv_l_bnds, const RealVector &beuv_u_bnds, const RealVector &gauv_alphas, const RealVector &gauv_betas, const RealVector &guuv_alphas, const RealVector &guuv_betas, const RealVector &fuv_alphas, const RealVector &fuv_betas, const RealVector &wuv_alphas, const RealVector &wuv_betas, const RealRealMapArray &hbuv_prs, const RealVector &puv_lambdas, const RealVector &biuv_p_per_tr, const IntVector &biuv_num_trials, const RealVector &nbuv_p_per_tr, const IntVector &nbuv_num_trials, const RealVector &geuv_p_per_tr, const IntVector &hguv_tot_pop, const IntVector &hguv_sel_pop, const IntVector &hguv_num_drawn, const IntRealMapArray &hpuiv_prs, const StringRealMapArray &hpusv_prs, const RealRealMapArray &hpurv_prs, const RealSymMatrix &uv_corr)"
.br
.RI "\fIstandard constructor \fP"
.ti -1c
.RI "\fBAleatoryDistParams\fP (const \fBAleatoryDistParams\fP &adp)"
.br
.RI "\fIcopy constructor \fP"
.ti -1c
.RI "\fB~AleatoryDistParams\fP ()"
.br
.RI "\fIdestructor \fP"
.ti -1c
.RI "\fBAleatoryDistParams\fP & \fBoperator=\fP (const \fBAleatoryDistParams\fP &adp)"
.br
.RI "\fIassignment operator \fP"
.ti -1c
.RI "size_t \fBcauv\fP () const "
.br
.RI "\fIreturn total number of continuous aleatory uncertain variables \fP"
.ti -1c
.RI "size_t \fBdauiv\fP () const "
.br
.RI "\fIreturn total number of discrete aleatory uncertain integer variables \fP"
.ti -1c
.RI "size_t \fBdausv\fP () const "
.br
.RI "\fIreturn total number of discrete aleatory uncertain string variables \fP"
.ti -1c
.RI "size_t \fBdaurv\fP () const "
.br
.RI "\fIreturn total number of discrete aleatory uncertain real variables \fP"
.ti -1c
.RI "size_t \fBdauv\fP () const "
.br
.RI "\fIreturn total number of discrete aleatory uncertain variables \fP"
.ti -1c
.RI "void \fBnuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of normal uncertain variables \fP"
.ti -1c
.RI "void \fBlnuv_ms\fP (size_t num_lnuv)"
.br
.RI "\fIsize the number of lognormal uncertain variables (mean, std deviation) \fP"
.ti -1c
.RI "void \fBlnuv_lz\fP (size_t num_lnuv)"
.br
.RI "\fIsize the number of lognormal uncertain variables (lambda, zeta) \fP"
.ti -1c
.RI "void \fBlnuv_me\fP (size_t num_lnuv)"
.br
.RI "\fIsize the number of lognormal uncertain variables (mean, error factor) \fP"
.ti -1c
.RI "void \fBuuv\fP (size_t num_uuv)"
.br
.RI "\fIsize the number of uniform uncertain variables \fP"
.ti -1c
.RI "void \fBluuv\fP (size_t num_luuv)"
.br
.RI "\fIsize the number of loguniform uncertain variables \fP"
.ti -1c
.RI "void \fBtuv\fP (size_t num_tuv)"
.br
.RI "\fIsize the number of triangular uncertain variables \fP"
.ti -1c
.RI "void \fBeuv\fP (size_t num_euv)"
.br
.RI "\fIsize the number of exponential uncertain variables \fP"
.ti -1c
.RI "void \fBbuv\fP (size_t num_buv)"
.br
.RI "\fIsize the number of beta uncertain variables \fP"
.ti -1c
.RI "void \fBgauv\fP (size_t num_gauv)"
.br
.RI "\fIsize the number of gamma uncertain variables \fP"
.ti -1c
.RI "void \fBguuv\fP (size_t num_guuv)"
.br
.RI "\fIsize the number of gumbel uncertain variables \fP"
.ti -1c
.RI "void \fBfuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of frechet uncertain variables \fP"
.ti -1c
.RI "void \fBwuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of weibull uncertain variables \fP"
.ti -1c
.RI "void \fBhbuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of histogram bin uncertain variables \fP"
.ti -1c
.RI "void \fBpuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of poisson uncertain variables \fP"
.ti -1c
.RI "void \fBbiuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of binominal uncertain variables \fP"
.ti -1c
.RI "void \fBnbuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of negative binominal uncertain variables \fP"
.ti -1c
.RI "void \fBgeuv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of geometric uncertain variables \fP"
.ti -1c
.RI "void \fBhguv\fP (size_t num_nuv)"
.br
.RI "\fIsize the number of hypergeometric uncertain variables \fP"
.ti -1c
.RI "void \fBhpuv\fP (size_t num_hpiuv, size_t num_hpsuv, size_t num_hpruv)"
.br
.RI "\fIsize the number of histogram point uncertain variables \fP"
.ti -1c
.RI "void \fBcopy\fP (const \fBAleatoryDistParams\fP &adp)"
.br
.RI "\fIdeep copy (as opposed to operator= shallow copy) \fP"
.ti -1c
.RI "void \fBupdate\fP (const \fBAleatoryDistParams\fP &adp)"
.br
.RI "\fIdata update (no changes to representation (unless null)) \fP"
.ti -1c
.RI "void \fBupdate_partial\fP (const \fBAleatoryDistParams\fP &adp_x, const std::vector< \fBRandomVariable\fP > &x_ran_vars, const ShortArray &u_types)"
.br
.RI "\fIpartial data update of the distribution data not affected by an x->u variable transformation \fP"
.ti -1c
.RI "const RealVector & \fBnormal_means\fP () const "
.br
.RI "\fIreturn the normal uncertain variable means \fP"
.ti -1c
.RI "const Real & \fBnormal_mean\fP (size_t i) const "
.br
.RI "\fIreturn the ith normal uncertain variable mean \fP"
.ti -1c
.RI "void \fBnormal_means\fP (const RealVector &n_means)"
.br
.RI "\fIset the normal uncertain variable means \fP"
.ti -1c
.RI "void \fBnormal_mean\fP (const Real &n_mean, size_t i)"
.br
.RI "\fIset the ith normal uncertain variable mean \fP"
.ti -1c
.RI "const RealVector & \fBnormal_std_deviations\fP () const "
.br
.RI "\fIreturn the normal uncertain variable standard deviations \fP"
.ti -1c
.RI "const Real & \fBnormal_std_deviation\fP (size_t i) const "
.br
.RI "\fIreturn the ith normal uncertain variable standard deviation \fP"
.ti -1c
.RI "void \fBnormal_std_deviations\fP (const RealVector &n_std_devs)"
.br
.RI "\fIset the normal uncertain variable standard deviations \fP"
.ti -1c
.RI "void \fBnormal_std_deviation\fP (const Real &n_std_dev, size_t i)"
.br
.RI "\fIset the ith normal uncertain variable standard deviation \fP"
.ti -1c
.RI "const RealVector & \fBnormal_lower_bounds\fP () const "
.br
.RI "\fIreturn the normal uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBnormal_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith normal uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBnormal_lower_bounds\fP (const RealVector &n_lower_bnds)"
.br
.RI "\fIset the normal uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBnormal_lower_bound\fP (const Real &n_lower_bnd, size_t i)"
.br
.RI "\fIset the ith normal uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBnormal_upper_bounds\fP () const "
.br
.RI "\fIreturn the normal uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBnormal_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith normal uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBnormal_upper_bounds\fP (const RealVector &n_upper_bnds)"
.br
.RI "\fIset the normal uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBnormal_upper_bound\fP (const Real &n_upper_bnd, size_t i)"
.br
.RI "\fIset the ith normal uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_means\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable means \fP"
.ti -1c
.RI "const Real & \fBlognormal_mean\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable mean \fP"
.ti -1c
.RI "void \fBlognormal_means\fP (const RealVector &ln_means)"
.br
.RI "\fIset the lognormal uncertain variable means \fP"
.ti -1c
.RI "void \fBlognormal_mean\fP (const Real &ln_mean, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable mean \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_std_deviations\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable standard deviations \fP"
.ti -1c
.RI "const Real & \fBlognormal_std_deviation\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable standard deviation \fP"
.ti -1c
.RI "void \fBlognormal_std_deviations\fP (const RealVector &ln_std_devs)"
.br
.RI "\fIset the lognormal uncertain variable standard deviations \fP"
.ti -1c
.RI "void \fBlognormal_std_deviation\fP (const Real &ln_std_dev, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable standard deviation \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_lambdas\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable lambdas \fP"
.ti -1c
.RI "const Real & \fBlognormal_lambda\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable lambda \fP"
.ti -1c
.RI "void \fBlognormal_lambdas\fP (const RealVector &ln_lambdas)"
.br
.RI "\fIset the lognormal uncertain variable lambdas \fP"
.ti -1c
.RI "void \fBlognormal_lambda\fP (const Real &ln_lambda, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable lambda \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_zetas\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable zetas \fP"
.ti -1c
.RI "const Real & \fBlognormal_zeta\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable zeta \fP"
.ti -1c
.RI "void \fBlognormal_zetas\fP (const RealVector &ln_std_devs)"
.br
.RI "\fIset the lognormal uncertain variable zetas \fP"
.ti -1c
.RI "void \fBlognormal_zeta\fP (const Real &ln_std_dev, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable zeta \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_error_factors\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable error factors \fP"
.ti -1c
.RI "const Real & \fBlognormal_error_factor\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable error factor \fP"
.ti -1c
.RI "void \fBlognormal_error_factors\fP (const RealVector &ln_err_facts)"
.br
.RI "\fIset the lognormal uncertain variable error factors \fP"
.ti -1c
.RI "void \fBlognormal_error_factor\fP (const Real &ln_err_fact, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable error factor \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_lower_bounds\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBlognormal_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBlognormal_lower_bounds\fP (const RealVector &ln_lower_bnds)"
.br
.RI "\fIset the lognormal uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBlognormal_lower_bound\fP (const Real &ln_lower_bnd, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBlognormal_upper_bounds\fP () const "
.br
.RI "\fIreturn the lognormal uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBlognormal_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith lognormal uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBlognormal_upper_bounds\fP (const RealVector &ln_upper_bnds)"
.br
.RI "\fIset the lognormal uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBlognormal_upper_bound\fP (const Real &ln_upper_bnd, size_t i)"
.br
.RI "\fIset the ith lognormal uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBuniform_lower_bounds\fP () const "
.br
.RI "\fIreturn the uniform uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBuniform_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith uniform uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBuniform_lower_bounds\fP (const RealVector &u_lower_bnds)"
.br
.RI "\fIset the uniform uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBuniform_lower_bound\fP (const Real &u_lower_bnd, size_t i)"
.br
.RI "\fIset the ith uniform uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBuniform_upper_bounds\fP () const "
.br
.RI "\fIreturn the uniform uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBuniform_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith uniform uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBuniform_upper_bounds\fP (const RealVector &u_upper_bnds)"
.br
.RI "\fIset the uniform uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBuniform_upper_bound\fP (const Real &u_upper_bnd, size_t i)"
.br
.RI "\fIset the ith uniform uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBloguniform_lower_bounds\fP () const "
.br
.RI "\fIreturn the loguniform uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBloguniform_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith loguniform uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBloguniform_lower_bounds\fP (const RealVector &lu_lower_bnds)"
.br
.RI "\fIset the loguniform uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBloguniform_lower_bound\fP (const Real &lu_lower_bnd, size_t i)"
.br
.RI "\fIset the ith loguniform uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBloguniform_upper_bounds\fP () const "
.br
.RI "\fIreturn the loguniform uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBloguniform_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith loguniform uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBloguniform_upper_bounds\fP (const RealVector &lu_upper_bnds)"
.br
.RI "\fIset the loguniform uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBloguniform_upper_bound\fP (const Real &lu_upper_bnd, size_t i)"
.br
.RI "\fIset the ith loguniform uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBtriangular_modes\fP () const "
.br
.RI "\fIreturn the triangular uncertain variable modes \fP"
.ti -1c
.RI "const Real & \fBtriangular_mode\fP (size_t i) const "
.br
.RI "\fIreturn the ith triangular uncertain variable mode \fP"
.ti -1c
.RI "void \fBtriangular_modes\fP (const RealVector &t_modes)"
.br
.RI "\fIset the triangular uncertain variable modes \fP"
.ti -1c
.RI "void \fBtriangular_mode\fP (const Real &t_mode, size_t i)"
.br
.RI "\fIset the ith triangular uncertain variable mode \fP"
.ti -1c
.RI "const RealVector & \fBtriangular_lower_bounds\fP () const "
.br
.RI "\fIreturn the triangular uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBtriangular_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith triangular uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBtriangular_lower_bounds\fP (const RealVector &t_lower_bnds)"
.br
.RI "\fIset the triangular uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBtriangular_lower_bound\fP (const Real &t_lower_bnd, size_t i)"
.br
.RI "\fIset the ith triangular uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBtriangular_upper_bounds\fP () const "
.br
.RI "\fIreturn the triangular uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBtriangular_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith triangular uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBtriangular_upper_bounds\fP (const RealVector &t_upper_bnds)"
.br
.RI "\fIset the triangular uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBtriangular_upper_bound\fP (const Real &t_upper_bnd, size_t i)"
.br
.RI "\fIset the ith triangular uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBexponential_betas\fP () const "
.br
.RI "\fIreturn the exponential uncertain variable beta parameters \fP"
.ti -1c
.RI "const Real & \fBexponential_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith exponential uncertain variable beta parameter \fP"
.ti -1c
.RI "void \fBexponential_betas\fP (const RealVector &e_betas)"
.br
.RI "\fIset the exponential uncertain variable beta parameters \fP"
.ti -1c
.RI "void \fBexponential_beta\fP (const Real &e_beta, size_t i)"
.br
.RI "\fIset the ith exponential uncertain variable beta parameter \fP"
.ti -1c
.RI "const RealVector & \fBbeta_alphas\fP () const "
.br
.RI "\fIreturn the beta uncertain variable alphas \fP"
.ti -1c
.RI "const Real & \fBbeta_alpha\fP (size_t i) const "
.br
.RI "\fIreturn the ith beta uncertain variable alpha \fP"
.ti -1c
.RI "void \fBbeta_alphas\fP (const RealVector &b_alphas)"
.br
.RI "\fIset the beta uncertain variable alphas \fP"
.ti -1c
.RI "void \fBbeta_alpha\fP (const Real &b_alpha, size_t i)"
.br
.RI "\fIset the ith beta uncertain variable alpha \fP"
.ti -1c
.RI "const RealVector & \fBbeta_betas\fP () const "
.br
.RI "\fIreturn the beta uncertain variable betas \fP"
.ti -1c
.RI "const Real & \fBbeta_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith beta uncertain variable beta \fP"
.ti -1c
.RI "void \fBbeta_betas\fP (const RealVector &b_betas)"
.br
.RI "\fIset the beta uncertain variable betas \fP"
.ti -1c
.RI "void \fBbeta_beta\fP (const Real &b_beta, size_t i)"
.br
.RI "\fIset the ith beta uncertain variable beta \fP"
.ti -1c
.RI "const RealVector & \fBbeta_lower_bounds\fP () const "
.br
.RI "\fIreturn the beta uncertain variable lower bounds \fP"
.ti -1c
.RI "const Real & \fBbeta_lower_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith beta uncertain variable lower bound \fP"
.ti -1c
.RI "void \fBbeta_lower_bounds\fP (const RealVector &b_lower_bnds)"
.br
.RI "\fIset the beta uncertain variable lower bounds \fP"
.ti -1c
.RI "void \fBbeta_lower_bound\fP (const Real &b_lower_bnd, size_t i)"
.br
.RI "\fIset the ith beta uncertain variable lower bound \fP"
.ti -1c
.RI "const RealVector & \fBbeta_upper_bounds\fP () const "
.br
.RI "\fIreturn the beta uncertain variable upper bounds \fP"
.ti -1c
.RI "const Real & \fBbeta_upper_bound\fP (size_t i) const "
.br
.RI "\fIreturn the ith beta uncertain variable upper bound \fP"
.ti -1c
.RI "void \fBbeta_upper_bounds\fP (const RealVector &b_upper_bnds)"
.br
.RI "\fIset the beta uncertain variable upper bounds \fP"
.ti -1c
.RI "void \fBbeta_upper_bound\fP (const Real &b_upper_bnd, size_t i)"
.br
.RI "\fIset the ith beta uncertain variable upper bound \fP"
.ti -1c
.RI "const RealVector & \fBgamma_alphas\fP () const "
.br
.RI "\fIreturn the gamma uncertain variable alpha parameters \fP"
.ti -1c
.RI "const Real & \fBgamma_alpha\fP (size_t i) const "
.br
.RI "\fIreturn the ith gamma uncertain variable alpha parameter \fP"
.ti -1c
.RI "void \fBgamma_alphas\fP (const RealVector &ga_alphas)"
.br
.RI "\fIset the gamma uncertain variable alpha parameters \fP"
.ti -1c
.RI "void \fBgamma_alpha\fP (const Real &ga_alpha, size_t i)"
.br
.RI "\fIset the ith gamma uncertain variable alpha parameter \fP"
.ti -1c
.RI "const RealVector & \fBgamma_betas\fP () const "
.br
.RI "\fIreturn the gamma uncertain variable beta parameters \fP"
.ti -1c
.RI "const Real & \fBgamma_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith gamma uncertain variable beta parameter \fP"
.ti -1c
.RI "void \fBgamma_betas\fP (const RealVector &ga_betas)"
.br
.RI "\fIset the gamma uncertain variable beta parameters \fP"
.ti -1c
.RI "void \fBgamma_beta\fP (const Real &ga_beta, size_t i)"
.br
.RI "\fIset the ith gamma uncertain variable beta parameter \fP"
.ti -1c
.RI "const RealVector & \fBgumbel_alphas\fP () const "
.br
.RI "\fIreturn the gumbel uncertain variable alphas \fP"
.ti -1c
.RI "const Real & \fBgumbel_alpha\fP (size_t i) const "
.br
.RI "\fIreturn the ith gumbel uncertain variable alpha \fP"
.ti -1c
.RI "void \fBgumbel_alphas\fP (const RealVector &gu_alphas)"
.br
.RI "\fIset the gumbel uncertain variable alphas \fP"
.ti -1c
.RI "void \fBgumbel_alpha\fP (const Real &gu_alpha, size_t i)"
.br
.RI "\fIset the ith gumbel uncertain variable alpha \fP"
.ti -1c
.RI "const RealVector & \fBgumbel_betas\fP () const "
.br
.RI "\fIreturn the gumbel uncertain variable betas \fP"
.ti -1c
.RI "const Real & \fBgumbel_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith gumbel uncertain variable beta \fP"
.ti -1c
.RI "void \fBgumbel_betas\fP (const RealVector &gu_betas)"
.br
.RI "\fIset the gumbel uncertain variable betas \fP"
.ti -1c
.RI "void \fBgumbel_beta\fP (const Real &gu_beta, size_t i)"
.br
.RI "\fIset the ith gumbel uncertain variable beta \fP"
.ti -1c
.RI "const RealVector & \fBfrechet_alphas\fP () const "
.br
.RI "\fIreturn the frechet uncertain variable alpha parameters \fP"
.ti -1c
.RI "const Real & \fBfrechet_alpha\fP (size_t i) const "
.br
.RI "\fIreturn the ith frechet uncertain variable alpha parameter \fP"
.ti -1c
.RI "void \fBfrechet_alphas\fP (const RealVector &f_alphas)"
.br
.RI "\fIset the frechet uncertain variable alpha parameters \fP"
.ti -1c
.RI "void \fBfrechet_alpha\fP (const Real &f_alpha, size_t i)"
.br
.RI "\fIset the ith frechet uncertain variable alpha parameter \fP"
.ti -1c
.RI "const RealVector & \fBfrechet_betas\fP () const "
.br
.RI "\fIreturn the frechet uncertain variable beta parameters \fP"
.ti -1c
.RI "const Real & \fBfrechet_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith frechet uncertain variable beta parameter \fP"
.ti -1c
.RI "void \fBfrechet_betas\fP (const RealVector &f_betas)"
.br
.RI "\fIset the frechet uncertain variable beta parameters \fP"
.ti -1c
.RI "void \fBfrechet_beta\fP (const Real &f_beta, size_t i)"
.br
.RI "\fIset the ith frechet uncertain variable beta parameter \fP"
.ti -1c
.RI "const RealVector & \fBweibull_alphas\fP () const "
.br
.RI "\fIreturn the weibull uncertain variable alpha parameters \fP"
.ti -1c
.RI "const Real & \fBweibull_alpha\fP (size_t i) const "
.br
.RI "\fIreturn the ith weibull uncertain variable alpha parameter \fP"
.ti -1c
.RI "void \fBweibull_alphas\fP (const RealVector &w_alphas)"
.br
.RI "\fIset the weibull uncertain variable alpha parameters \fP"
.ti -1c
.RI "void \fBweibull_alpha\fP (const Real &w_alpha, size_t i)"
.br
.RI "\fIset the ith weibull uncertain variable alpha parameter \fP"
.ti -1c
.RI "const RealVector & \fBweibull_betas\fP () const "
.br
.RI "\fIreturn the weibull uncertain variable beta parameters \fP"
.ti -1c
.RI "const Real & \fBweibull_beta\fP (size_t i) const "
.br
.RI "\fIreturn the ith weibull uncertain variable beta parameter \fP"
.ti -1c
.RI "void \fBweibull_betas\fP (const RealVector &w_betas)"
.br
.RI "\fIset the weibull uncertain variable beta parameters \fP"
.ti -1c
.RI "void \fBweibull_beta\fP (const Real &w_beta, size_t i)"
.br
.RI "\fIset the ith weibull uncertain variable beta parameter \fP"
.ti -1c
.RI "const RealRealMapArray & \fBhistogram_bin_pairs\fP () const "
.br
.RI "\fIreturn the histogram uncertain bin pairs \fP"
.ti -1c
.RI "const RealRealMap & \fBhistogram_bin_pairs\fP (size_t i) const "
.br
.RI "\fIreturn the ith histogram uncertain bin pair \fP"
.ti -1c
.RI "void \fBhistogram_bin_pairs\fP (const RealRealMapArray &h_bin_pairs)"
.br
.RI "\fIset the histogram uncertain bin pairs \fP"
.ti -1c
.RI "void \fBhistogram_bin_pairs\fP (const RealRealMap &h_bin_pairs_i, size_t i)"
.br
.RI "\fIset the ith histogram uncertain bin pair \fP"
.ti -1c
.RI "const RealVector & \fBpoisson_lambdas\fP () const "
.br
.RI "\fIreturn the poisson uncertain variable lambda parameters \fP"
.ti -1c
.RI "const Real & \fBpoisson_lambda\fP (size_t i) const "
.br
.RI "\fIreturn the ith poisson uncertain variable lambda parameter \fP"
.ti -1c
.RI "void \fBpoisson_lambdas\fP (const RealVector &p_lambdas)"
.br
.RI "\fIset the poisson uncertain variable lambda parameters \fP"
.ti -1c
.RI "void \fBpoisson_lambda\fP (const Real &p_lambda, size_t i)"
.br
.RI "\fIset the ith poisson uncertain variable lambda parameter \fP"
.ti -1c
.RI "const RealVector & \fBbinomial_probability_per_trial\fP () const "
.br
.RI "\fIreturn the binomial probability per each trial (p) \fP"
.ti -1c
.RI "const Real & \fBbinomial_probability_per_trial\fP (size_t i) const "
.br
.RI "\fIreturn the ith binomial probability per each trial (p) \fP"
.ti -1c
.RI "void \fBbinomial_probability_per_trial\fP (const RealVector &probs_per_trial)"
.br
.RI "\fIset the binomial probability per each trial (p) \fP"
.ti -1c
.RI "void \fBbinomial_probability_per_trial\fP (const Real &prob_per_trial, size_t i)"
.br
.RI "\fIset the ith binomial probability per each trial (p) \fP"
.ti -1c
.RI "const IntVector & \fBbinomial_num_trials\fP () const "
.br
.RI "\fIreturn the binomial number of trials (N) \fP"
.ti -1c
.RI "int \fBbinomial_num_trials\fP (size_t i) const "
.br
.RI "\fIreturn the ith binomial number of trials (N) \fP"
.ti -1c
.RI "void \fBbinomial_num_trials\fP (const IntVector &num_trials)"
.br
.RI "\fIset the binomial number of trials (N) \fP"
.ti -1c
.RI "void \fBbinomial_num_trials\fP (int num_trials, size_t i)"
.br
.RI "\fIset the ith binomial number of trials (N) \fP"
.ti -1c
.RI "const RealVector & \fBnegative_binomial_probability_per_trial\fP () const "
.br
.RI "\fIreturn the negative binomial probability per each trial (p) \fP"
.ti -1c
.RI "const Real & \fBnegative_binomial_probability_per_trial\fP (size_t i) const "
.br
.RI "\fIreturn the ith negative binomial probability per each trial (p) \fP"
.ti -1c
.RI "void \fBnegative_binomial_probability_per_trial\fP (const RealVector &probs_per_trial)"
.br
.RI "\fIset the negative binomial probability per each trial (p) \fP"
.ti -1c
.RI "void \fBnegative_binomial_probability_per_trial\fP (const Real &prob_per_trial, size_t i)"
.br
.RI "\fIset the ith negative binomial probability per each trial (p) \fP"
.ti -1c
.RI "const IntVector & \fBnegative_binomial_num_trials\fP () const "
.br
.RI "\fIreturn the negative binomial number of trials (N) \fP"
.ti -1c
.RI "int \fBnegative_binomial_num_trials\fP (size_t i) const "
.br
.RI "\fIreturn the ith negative binomial number of trials (N) \fP"
.ti -1c
.RI "void \fBnegative_binomial_num_trials\fP (const IntVector &num_trials)"
.br
.RI "\fIset the negative binomial number of trials (N) \fP"
.ti -1c
.RI "void \fBnegative_binomial_num_trials\fP (int num_trials, size_t i)"
.br
.RI "\fIset the ith negative binomial number of trials (N) \fP"
.ti -1c
.RI "const RealVector & \fBgeometric_probability_per_trial\fP () const "
.br
.RI "\fIreturn the geometric probability per each trial (p) \fP"
.ti -1c
.RI "const Real & \fBgeometric_probability_per_trial\fP (size_t i) const "
.br
.RI "\fIreturn the ith geometric probability per each trial (p) \fP"
.ti -1c
.RI "void \fBgeometric_probability_per_trial\fP (const RealVector &probs_per_trial)"
.br
.RI "\fIset the geometric probability per each trial (p) \fP"
.ti -1c
.RI "void \fBgeometric_probability_per_trial\fP (const Real &prob_per_trial, size_t i)"
.br
.RI "\fIset the ith geometric probability per each trial (p) \fP"
.ti -1c
.RI "const IntVector & \fBhypergeometric_total_population\fP () const "
.br
.RI "\fIreturn the hypergeometric number in total population \fP"
.ti -1c
.RI "int \fBhypergeometric_total_population\fP (size_t i) const "
.br
.RI "\fIreturn the ith hypergeometric number in total population \fP"
.ti -1c
.RI "void \fBhypergeometric_total_population\fP (const IntVector &total_pop)"
.br
.RI "\fIset the hypergeometric number in total population \fP"
.ti -1c
.RI "void \fBhypergeometric_total_population\fP (int total_pop, size_t i)"
.br
.RI "\fIset the ith hypergeometric number in total population \fP"
.ti -1c
.RI "const IntVector & \fBhypergeometric_selected_population\fP () const "
.br
.RI "\fIreturn the hypergeometric number in selected population \fP"
.ti -1c
.RI "int \fBhypergeometric_selected_population\fP (size_t i) const "
.br
.RI "\fIreturn the ith hypergeometric number in selected population \fP"
.ti -1c
.RI "void \fBhypergeometric_selected_population\fP (const IntVector &sel_pop)"
.br
.RI "\fIset the hypergeometric number in selected population \fP"
.ti -1c
.RI "void \fBhypergeometric_selected_population\fP (int sel_pop, size_t i)"
.br
.RI "\fIset the ith hypergeometric number in selected population \fP"
.ti -1c
.RI "const IntVector & \fBhypergeometric_num_drawn\fP () const "
.br
.RI "\fIreturn the hypergeometric number failed \fP"
.ti -1c
.RI "int \fBhypergeometric_num_drawn\fP (size_t i) const "
.br
.RI "\fIreturn the ith hypergeometric number failed \fP"
.ti -1c
.RI "void \fBhypergeometric_num_drawn\fP (const IntVector &num_drawn)"
.br
.RI "\fIset the hypergeometric number in total population \fP"
.ti -1c
.RI "void \fBhypergeometric_num_drawn\fP (int num_drawn, size_t i)"
.br
.RI "\fIset the ith hypergeometric number in total population \fP"
.ti -1c
.RI "const IntRealMapArray & \fBhistogram_point_int_pairs\fP () const "
.br
.RI "\fIreturn the histogram uncertain point pairs \fP"
.ti -1c
.RI "const IntRealMap & \fBhistogram_point_int_pairs\fP (size_t i) const "
.br
.RI "\fIreturn the ith histogram uncertain point pair \fP"
.ti -1c
.RI "void \fBhistogram_point_int_pairs\fP (const IntRealMapArray &h_pt_pairs)"
.br
.RI "\fIset the histogram uncertain point pairs \fP"
.ti -1c
.RI "void \fBhistogram_point_int_pairs\fP (const IntRealMap &h_pt_pairs_i, size_t i)"
.br
.RI "\fIset the ith histogram uncertain point pair \fP"
.ti -1c
.RI "const StringRealMapArray & \fBhistogram_point_string_pairs\fP () const "
.br
.RI "\fIreturn the histogram uncertain point pairs \fP"
.ti -1c
.RI "const StringRealMap & \fBhistogram_point_string_pairs\fP (size_t i) const "
.br
.RI "\fIreturn the ith histogram uncertain point pair \fP"
.ti -1c
.RI "void \fBhistogram_point_string_pairs\fP (const StringRealMapArray &h_pt_pairs)"
.br
.RI "\fIset the histogram uncertain point pairs \fP"
.ti -1c
.RI "void \fBhistogram_point_string_pairs\fP (const StringRealMap &h_pt_pairs_i, size_t i)"
.br
.RI "\fIset the ith histogram uncertain point pair \fP"
.ti -1c
.RI "const RealRealMapArray & \fBhistogram_point_real_pairs\fP () const "
.br
.RI "\fIreturn the histogram uncertain point pairs \fP"
.ti -1c
.RI "const RealRealMap & \fBhistogram_point_real_pairs\fP (size_t i) const "
.br
.RI "\fIreturn the ith histogram uncertain point pair \fP"
.ti -1c
.RI "void \fBhistogram_point_real_pairs\fP (const RealRealMapArray &h_pt_pairs)"
.br
.RI "\fIset the histogram uncertain point pairs \fP"
.ti -1c
.RI "void \fBhistogram_point_real_pairs\fP (const RealRealMap &h_pt_pairs_i, size_t i)"
.br
.RI "\fIset the ith histogram uncertain point pair \fP"
.ti -1c
.RI "const RealSymMatrix & \fBuncertain_correlations\fP () const "
.br
.RI "\fIreturn the uncertain variable correlations \fP"
.ti -1c
.RI "void \fBuncertain_correlations\fP (const RealSymMatrix &uncertain_corr)"
.br
.RI "\fIset the uncertain variable correlations \fP"
.ti -1c
.RI "bool \fBis_null\fP () const "
.br
.RI "\fIfunction to check adpRep (does this handle contain a body) \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBAleatoryDistParamsRep\fP * \fBadpRep\fP"
.br
.RI "\fIpointer to the body (handle-body idiom) \fP"
.in -1c
.SH "Detailed Description"
.PP 
Container class encapsulating distribution parameters for aleatory random variables\&. 

This class consolidates aleatory distribution data and simplifies the APIs that require distribution parameters\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for PECOS from the source code\&.
