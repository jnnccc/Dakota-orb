.TH "PiecewiseInterpPolynomial" 3 "Wed Dec 27 2017" "Version Version 1.0" "PECOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
PiecewiseInterpPolynomial \- Derived basis polynomial class for 1-D piecewise interpolation polynomials\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBInterpolationPolynomial\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBPiecewiseInterpPolynomial\fP (short poly_type, short rule=NEWTON_COTES)"
.br
.RI "\fIconstructor with poly_type and rule arguments \fP"
.ti -1c
.RI "\fBPiecewiseInterpPolynomial\fP (const RealArray &interp_pts, short poly_type, short rule=NEWTON_COTES)"
.br
.RI "\fIconstructor with poly_type, rule, and set of points to interpolate \fP"
.ti -1c
.RI "\fB~PiecewiseInterpPolynomial\fP ()"
.br
.RI "\fIdestructor \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBprecompute_data\fP ()"
.br
.RI "\fIprecompute data that is reused repeatedly within interpolation \fP"
.ti -1c
.RI "Real \fBtype1_value\fP (Real x, unsigned short i)"
.br
.ti -1c
.RI "Real \fBtype2_value\fP (Real x, unsigned short i)"
.br
.RI "\fIretrieve the value of the n_th type 2 polynomial for a given parameter x \fP"
.ti -1c
.RI "Real \fBtype1_gradient\fP (Real x, unsigned short i)"
.br
.ti -1c
.RI "Real \fBtype2_gradient\fP (Real x, unsigned short i)"
.br
.RI "\fIretrieve the gradient of the n_th type 2 polynomial for a given parameter x \fP"
.ti -1c
.RI "const RealArray & \fBcollocation_points\fP (unsigned short order)"
.br
.RI "\fIreturn collocation points corresponding to orthogonal polynomial order n \fP"
.ti -1c
.RI "const RealArray & \fBtype1_collocation_weights\fP (unsigned short order)"
.br
.RI "\fIreturn the type 1 collocation weights corresponding to a point set of size order \fP"
.ti -1c
.RI "const RealArray & \fBtype2_collocation_weights\fP (unsigned short order)"
.br
.RI "\fIreturn the type 2 collocation weights corresponding to a point set of size order \fP"
.ti -1c
.RI "void \fBcollocation_rule\fP (short rule)"
.br
.RI "\fIset \fBOrthogonalPolynomial::collocRule\fP \fP"
.ti -1c
.RI "short \fBcollocation_rule\fP () const "
.br
.RI "\fIget \fBOrthogonalPolynomial::collocRule\fP \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "short \fBcollocRule\fP"
.br
.RI "\fIname of closed nested rule: NEWTON_COTES (equidistant) or CLENSHAW_CURTIS (non-equidistant) \fP"
.ti -1c
.RI "Real \fBinterpInterval\fP"
.br
.RI "\fIthe constant interval between points for an equidistant collocRule \fP"
.ti -1c
.RI "RealArray \fBtype1InterpWts\fP"
.br
.RI "\fIset of 1-D weights for interpolation of values \fP"
.ti -1c
.RI "RealArray \fBtype2InterpWts\fP"
.br
.RI "\fIset of 1-D] weights for interpolation of gradients \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Derived basis polynomial class for 1-D piecewise interpolation polynomials\&. 

The \fBPiecewiseInterpPolynomial\fP class evaluates a univariate interpolation polynomial with local support\&. The order of the polynomial may be linear, based only on interpolated values, or cubic, based on interpolated values and gradients\&. It enables multidimensional interpolants within \fBInterpPolyApproximation\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "Real type1_value (Real x, unsigned short i)\fC [protected]\fP, \fC [virtual]\fP"
Compute value of the piecewise interpolation polynomial corresponding to interpolation point i\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, PiecewiseInterpPolynomial::collocRule, PiecewiseInterpPolynomial::interpInterval, and InterpolationPolynomial::interpPts\&.
.SS "Real type2_value (Real x, unsigned short n)\fC [protected]\fP, \fC [virtual]\fP"

.PP
retrieve the value of the n_th type 2 polynomial for a given parameter x For orthogonal polynomials, n specifies the order of the polynomial, whereas for interpolation polynomials, it identifies the interpolant for the n-th point\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, and InterpolationPolynomial::interpPts\&.
.SS "Real type1_gradient (Real x, unsigned short i)\fC [protected]\fP, \fC [virtual]\fP"
Compute derivative with respect to x of the piecewise interpolation polynomial corresponding to interpolation point i\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, PiecewiseInterpPolynomial::collocRule, PiecewiseInterpPolynomial::interpInterval, and InterpolationPolynomial::interpPts\&.
.SS "Real type2_gradient (Real x, unsigned short n)\fC [protected]\fP, \fC [virtual]\fP"

.PP
retrieve the gradient of the n_th type 2 polynomial for a given parameter x For orthogonal polynomials, n specifies the order of the polynomial, whereas for interpolation polynomials, it identifies the interpolant for the n-th point\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, PiecewiseInterpPolynomial::collocation_points(), and InterpolationPolynomial::interpPts\&.
.SS "const RealArray & collocation_points (unsigned short n)\fC [protected]\fP, \fC [virtual]\fP"

.PP
return collocation points corresponding to orthogonal polynomial order n This is defined for orthogonal and piecewise interpolation polynomials\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References PiecewiseInterpPolynomial::collocRule, PiecewiseInterpPolynomial::interpInterval, InterpolationPolynomial::interpPts, and PiecewiseInterpPolynomial::type1_collocation_weights()\&.
.PP
Referenced by PiecewiseInterpPolynomial::type1_collocation_weights(), PiecewiseInterpPolynomial::type2_collocation_weights(), and PiecewiseInterpPolynomial::type2_gradient()\&.
.SS "const RealArray & type1_collocation_weights (unsigned short order)\fC [protected]\fP, \fC [virtual]\fP"

.PP
return the type 1 collocation weights corresponding to a point set of size order This is defined for orthogonal and piecewise interpolation polynomials\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, PiecewiseInterpPolynomial::collocation_points(), PiecewiseInterpPolynomial::collocRule, PiecewiseInterpPolynomial::interpInterval, InterpolationPolynomial::interpPts, PiecewiseInterpPolynomial::type1InterpWts, and PiecewiseInterpPolynomial::type2_collocation_weights()\&.
.PP
Referenced by PiecewiseInterpPolynomial::collocation_points()\&.
.SS "const RealArray & type2_collocation_weights (unsigned short order)\fC [protected]\fP, \fC [virtual]\fP"

.PP
return the type 2 collocation weights corresponding to a point set of size order This is defined for piecewise interpolation polynomials\&. 
.PP
Reimplemented from \fBBasisPolynomial\fP\&.
.PP
References BasisPolynomial::basisPolyType, PiecewiseInterpPolynomial::collocation_points(), PiecewiseInterpPolynomial::collocRule, PiecewiseInterpPolynomial::interpInterval, InterpolationPolynomial::interpPts, and PiecewiseInterpPolynomial::type2InterpWts\&.
.PP
Referenced by PiecewiseInterpPolynomial::type1_collocation_weights()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for PECOS from the source code\&.
