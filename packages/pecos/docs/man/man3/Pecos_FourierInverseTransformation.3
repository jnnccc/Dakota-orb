.TH "FourierInverseTransformation" 3 "Wed Dec 27 2017" "Version Version 1.0" "PECOS" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FourierInverseTransformation \- Class for iFFT data transformation\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherits \fBInverseTransformation\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFourierInverseTransformation\fP (const String &data_trans_type)"
.br
.RI "\fIconstructor \fP"
.ti -1c
.RI "\fB~FourierInverseTransformation\fP ()"
.br
.RI "\fIdestructor \fP"
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBinitialize\fP (const Real &total_t, const Real &w_bar, size_t seed)"
.br
.RI "\fIset scalar data \fP"
.ti -1c
.RI "void \fBpower_spectral_density\fP (const String &psd_name, const Real &param=0\&.)"
.br
.ti -1c
.RI "const RealVector & \fBcompute_sample\fP ()"
.br
.RI "\fIcompute and return \fBInverseTransformation::inverseSample\fP \fP"
.ti -1c
.RI "const RealMatrix & \fBcompute_samples\fP (size_t num_ifft_samples)"
.br
.RI "\fIcompute and return \fBInverseTransformation::inverseSamples\fP \fP"
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBcompute_sample_shinozuka_deodatis\fP ()"
.br
.RI "\fIperform iFFT using Shinozuka-Deodatis algorithm \fP"
.ti -1c
.RI "void \fBcompute_sample_grigoriu\fP ()"
.br
.RI "\fIperform iFFT using Grigoriu algorithm \fP"
.ti -1c
.RI "void \fBcompute_ifft_sample_set\fP (ComplexVector &ifft_vector)"
.br
.RI "\fIuse DFFTPACK or FFTW to map B vector into the i-th inverseSamples vector \fP"
.ti -1c
.RI "void \fBfinalize\fP ()"
.br
.RI "\fIdeallocate data allocated in \fBinitialize()\fP \fP"
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "short \fBfourierMethod\fP"
.br
.RI "\fIiFFT approach: IFFT_SD (Shinozuka-Deodatis) or IFFT_G (Grigoriu) \fP"
.ti -1c
.RI "size_t \fBifftSampleCntr\fP"
.br
.RI "\fIcounter for number of IFFT time domain realizations \fP"
.ti -1c
.RI "RealVector \fBsigmaSequence\fP"
.br
.RI "\fIsequence of standard deviations computed from psdSequence \fP"
.ti -1c
.RI "ComplexVector \fBifftVector\fP"
.br
.RI "\fIthe complex vector passed through FFTW/DFFTPACK for IFFT conversion from frequency domain to time domain \fP"
.ti -1c
.RI "RealVector \fBlhsParam1\fP"
.br
.RI "\fIfirst LHS parameter vector (means for generate_normal_samples(), lower bounds for generate_uniform_samples()) \fP"
.ti -1c
.RI "RealVector \fBlhsParam2\fP"
.br
.RI "\fIsecond LHS parameter vector (std devs for generate_normal_samples(), upper bounds for generate_uniform_samples()) \fP"
.ti -1c
.RI "RealMatrix \fBlhsSamples\fP"
.br
.RI "\fIrandom variable samples used in Grigoriu (num_terms x 2 variables) and Shinozuka-Deodatis (num_terms x 1 variable) algorithms \fP"
.ti -1c
.RI "fftw_plan \fBfftwPlan\fP"
.br
.RI "\fIPlan cache for FFTW\&. \fP"
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Class for iFFT data transformation\&. 

The \fBFourierInverseTransformation\fP employs an inverse fast Fourier transform (iFFT) to map from the frequency domain to the time domain\&. 
.SH "Member Function Documentation"
.PP 
.SS "void power_spectral_density (const String & psd_name, const Real & param = \fC0\&.\fP)\fC [protected]\fP, \fC [virtual]\fP"
Augments \fBInverseTransformation::power_spectral_density()\fP definition to include local data initialization (sigmaSequence)\&. 
.PP
Reimplemented from \fBDataTransformation\fP\&.
.PP
References InverseTransformation::deltaOmega, InverseTransformation::power_spectral_density(), InverseTransformation::psdSequence, and FourierInverseTransformation::sigmaSequence\&.
.PP
Referenced by FourierInverseTransformation::finalize()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for PECOS from the source code\&.
